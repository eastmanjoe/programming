'################################################
' Test Program to change the network settings via the WebAPI and public variables
'
'################################################

'################################################
' The CR1000 Status.IPInfo:
' "eth MAC: 00d02c044e5b\r\n
'  eth IP: 10.11.40.23\r\n
'  eth mask: 255.255.0.0\r\n
'  eth gw: 10.11.1.1\r\n
'  dns: 0.0.0.8\r\n
'  dns: 10.11.10.11\r\n
'  dns: 10.11.10.12\r\n"

' The CR800 Status.IPInfo:
' "CSIO(1) MAC: 00d02c0209b0\r\n
'  CSIO(1) IP: 10.11.40.48\r\n
'  CSIO(1) mask: 255.255.0.0\r\n
'  CSIO(1) gw: 10.11.1.1\r\n
'  dns: 0.0.0.8\r\n
'  dns: 10.11.10.11\r\n
'  dns: 10.11.10.12\r\n"

'192.168.13.100,255.255.0.0,192.168.13.2,209.244.0.3,8.8.4.4
'192.168.13.100,255.255.0.0,192.168.13.2,209.244.0.3,209.244.0.4

'Commands to test getting IP Address via browser
'http://10.11.40.23/?command=dataquery&uri=dl:status.ipinfo&mode=most-recent&format=json
'http://10.11.50.26/?command=dataquery&uri=dl:public.pnl_logger_ip&mode=most-recent&format=json
'http://10.11.50.26/?command=dataquery&uri=dl:public.pnl_logger_netmask&mode=most-recent&format=json
'http://10.11.50.26/?command=dataquery&uri=dl:public.pnl_logger_gateway&mode=most-recent&format=json

'Commands to test setting IP Address via browser
'Requires the .csipasswd file to be set or &security=2278 needs to be put on the end of the command
'http://10.11.50.26/?command=setvalueex&uri=dl:public.pnl_logger_ip&value=10.11.50.150&format=json
'http://10.11.50.26/?command=setvalueex&uri=dl:public.pnl_logger_netmask&value=255.255.0.0&format=json
'http://10.11.50.26/?command=setvalueex&uri=dl:public.pnl_logger_gateway&value=10.11.1.1&format=json
'http://10.11.50.26/?command=setvalueex&uri=dl:public.pnl_logger_dns1&value=8.8.8.8&format=json
'http://10.11.50.26/?command=setvalueex&uri=dl:public.pnl_logger_dns2&value=8.8.4.4&format=json
'http://166.161.64.248/?command=setvalueex&uri=dl:public.pnl_logger_dns1&value=8.8.8.8&format=json
'http://166.161.64.248/?command=setvalueex&uri=dl:public.pnl_logger_dns2&value=8.8.4.4&format=json

'http://166.161.64.248/?command=setvalueex&uri=dl:public.pnl_logger_gateway&value=10.11.1.1&format=json
'http://166.161.64.248/?command=setvalueex&uri=dl:public.pnl_logger_gateway&value=10.11.1.1&format=json

' As of OS28 the default auto-IP Address is: 169.254.67.85
'################################################

Public test_ver As String = "5.05.00"


'## Configuration ###############################
PipeLineMode

'################################################

'## Declarations ################################
Const SP = Chr(32)
Const TB = Chr(9)
Const CR = Chr(13)
Const LF = Chr(10)
Const CRLF = CR & LF
Const QN = Chr(34)
Const NULL = Chr(00)

Public pnl_network_settings_error As String * 1024
Public ip_info(8) As String * 42
Alias ip_info = datalogger_default_network, datalogger_mac, datalogger_ip, _
  datalogger_netmask, datalogger_gateway, datalogger_ipv6, datalogger_dns1, _
  datalogger_dns2
Public datalogger_ipinfo As String * 256
Public cfg_datalogger_interface As Long
Dim counter As Long

Public pnl_cfg_change_network_settings As Boolean = FALSE
Public pnl_logger_ip As String * 32 = ""
Public pnl_logger_netmask As String * 32 = ""
Public pnl_logger_gateway As String * 32 = ""
Public pnl_logger_dns1 As String * 32 = "8.8.8.8"
Public pnl_logger_dns2 As String * 32 = ""

ConstTable(NETWORK_SETTINGS)
  Const CHANGE_NETWORK_SETTINGS = FALSE
  Const IP_ADDRESS = "169.254.67.85"
  Const NETMASK = "255.255.255.0"
  Const GATEWAY = "0.0.0.0"
  Const DNS1_ADDRESS = "8.8.4.4"
  Const DNS2_ADDRESS = "8.8.8.8"
EndConstTable

Public debug As String * 1024

'################################################

'## Data Tables #################################
' DataTable(fifteenMin, TRUE, -1)
'   DataInterval(0, 15, MIN, 0)
'   #If LoggerType = CR1000
'   CardOut(0, -1)
'   #EndIf

' EndTable 'fifteenMin
'################################################

'## Functions ###################################
Function parseIpInfo()
  Dim counter As Long
  Dim buffer_str As String * 256
  Dim line_buffer As String * 200
  Dim buffer_ip_info(6) As String * 42

  Erase(buffer_str)
  Erase(line_buffer)

  'parse Status.EthernetInfo to get current settings
  buffer_str = Status.EthernetInfo

  line_buffer = LowerCase(buffer_str)
  line_buffer = Replace(line_buffer, SP, "")
  line_buffer = Replace(line_buffer, CRLF, ",")

  SplitStr(buffer_ip_info(), line_buffer, ",", ArrayLength(buffer_ip_info), 5)

  Erase(buffer_str)

  ' capture only the mac address
  buffer_str = Right(buffer_ip_info(2), Len(buffer_ip_info(2)) - InStr(1, buffer_ip_info(2), ":", 2))

  'change mac address format from 00d02c0209b0 to 00:D0:2C:02:09:B0
  buffer_str = UpperCase(buffer_str)

  Erase(datalogger_mac)

  For counter = 1 To Len(buffer_str) Step 2
    datalogger_mac &= Mid(buffer_str, counter, 2)

    If counter < 11 Then datalogger_mac &= ":"
  Next

  ' capture the ipv6 address
  datalogger_ipv6 = UpperCase(Right(buffer_ip_info(6), Len(buffer_ip_info(6)) - InStr(1, buffer_ip_info(6), ":", 2)))

  #If LoggerType = CR1000 Then
    datalogger_ip = Status.IPAddressEth
  #ElseIf LoggerType = CR800 Then
    datalogger_ip = Status.IPAddressCSIO(1)
  #EndIf

  #If LoggerType = CR1000 Then
    datalogger_netmask = Status.IPMaskEth
    datalogger_gateway = Status.IPGateway
  #ElseIf LoggerType = CR800 Then
    datalogger_netmask = Status.IPMaskCSIO(1)
    datalogger_gateway = Status.IPGatewayCSIO(1)
  #EndIf

  datalogger_dns1 = Status.DNS(1)
  datalogger_dns2 = Status.DNS(2)

  If datalogger_ip <> "0.0.0.0" Then
  ' build the datalogger_ipinfo to match the Status.IPInfo field of OS26 with the addition of the DHCP flag
  ' "eth MAC: 00d02c044e5b\r\neth IP: 10.11.40.23\r\neth mask: 255.255.0.0\r\neth gw: 10.11.1.1\r\ndns: 0.0.0.8\r\ndns: 10.11.10.11\r\n"
    datalogger_ipinfo = "DHCP: disabled" + CRLF

  Else
    datalogger_ipinfo = "DHCP: enabled" + CRLF
  EndIf

  datalogger_ipinfo += "eth MAC: " + Right(buffer_ip_info(2), Len(buffer_ip_info(2)) - InStr(1, buffer_ip_info(2), ":", 2)) + CRLF
  datalogger_ipinfo += "eth IP: " + Right(buffer_ip_info(3), Len(buffer_ip_info(3)) - InStr(1, buffer_ip_info(3), ":", 2)) + CRLF
  datalogger_ipinfo += "eth mask: " + datalogger_netmask + CRLF
  datalogger_ipinfo += "eth gw: " + datalogger_gateway + CRLF
  datalogger_ipinfo += "dns: " + datalogger_dns1 + CRLF
  datalogger_ipinfo += "dns: " + datalogger_dns2 + CRLF
EndFunction 'parseIpInfo






Function checkIpFormat(type As String * 24, ip_string As String * 24) As Boolean
  Dim buffer_str(4) As String * 3
  Dim counter As Long
  Dim chr_counter As Long

  If ip_string = "" Then
    pnl_network_settings_error = type & " is missing"
    Return FALSE

  ElseIf Len(ip_string) > 15 Then
    pnl_network_settings_error = type & " contains too many characters"
    Return FALSE

  Else
    'check for valid ip address format
    SplitStr(buffer_str(1), ip_string, ".", 4, 5)

    For counter = 1 To 4
      If buffer_str(counter) = "" Then
        pnl_network_settings_error = type & " is missing octet number: " & counter
        Return FALSE
      EndIf

      If Len(buffer_str(counter)) > 3 Then
        pnl_network_settings_error = type & " has too many characters in octet number: " & counter
        Return FALSE
      EndIf

      For chr_counter = 1 To Len(buffer_str(counter))
        If ASCII(buffer_str(counter, 1, chr_counter)) < 48 OR ASCII(buffer_str(counter, 1, chr_counter)) > 57 Then
          pnl_network_settings_error = type & " contains illegal character in octet number: " & counter
          Return FALSE
        EndIf
      Next
    Next
  EndIf

  debug += type & " is valid; "

  Return TRUE
EndFunction 'checkIpFormat
'################################################


'## Main Program ################################
' ApplyandRestartSequence
'   SetSetting("NETWORK_SETTINGS.ApplyAndRestart", 1)
' EndApplyandRestartSequence



BeginProg
    debug = "Program Starting" + CRLF

  If CHANGE_NETWORK_SETTINGS Then
    debug += "Changing Settings" + CRLF
    #If LoggerType = CR1000
      SetSetting("IPAddressEth", IP_ADDRESS)
    #ElseIf LoggerType = CR800
      SetSetting("IPAddressCSIO(1)", IP_ADDRESS)
    #EndIf

    'if setting to DHCP, skip setting the other network settings
    If IP_ADDRESS <> "0.0.0.0" Then
      #If LoggerType = CR1000
        SetSetting("IPMaskEth", NETMASK)
      #ElseIf LoggerType = CR800
        SetSetting("IPMaskCSIO(1)", NETMASK)
      #EndIf

      #If LoggerType = CR1000
        SetSetting("IPGateway", GATEWAY)
      #ElseIf LoggerType = CR800
        SetSetting("IPGatewayCSIO(1)", GATEWAY)
      #EndIf

      SetSetting("DNS(2)", DNS2_ADDRESS)
    EndIf

    SetSetting("NETWORK_SETTINGS.CHANGE_NETWORK_SETTINGS", FALSE)
    SetSetting("NETWORK_SETTINGS.IP_ADDRESS", "169.254.67.85")
    SetSetting("NETWORK_SETTINGS.NETMASK", "255.255.255.0")
    SetSetting("NETWORK_SETTINGS.GATEWAY", "0.0.0.0")
    SetSetting("NETWORK_SETTINGS.DNS2_ADDRESS", "8.8.4.4")
    SetSetting("NETWORK_SETTINGS.ApplyAndRestart", TRUE)
  EndIf

  SetSetting("DNS(1)", DNS1_ADDRESS)
  SetSetting("FTPEnabled", FALSE)
  SetSetting("TelnetEnabled", FALSE)

  If LoggerType = CR800 Then
    cfg_datalogger_interface = 2
  ElseIf LoggerType = CR1000 Then
    cfg_datalogger_interface = 0
  EndIf

  parseIpInfo()


  debug = "Scan Starting" + CRLF
  Scan (30,Sec,3,0)

    parseIpInfo()

    ' update the consttable
    If pnl_cfg_change_network_settings Then

      Erase(pnl_network_settings_error)
      Erase(debug)

      If checkIpFormat("ip_addr", pnl_logger_ip) Then
        SetSetting("NETWORK_SETTINGS.IP_ADDRESS", pnl_logger_ip)
      EndIf

      ' if datalogger set to DHCP do not set the other settings
      If pnl_logger_ip <> "0.0.0.0" AND pnl_network_settings_error = "" Then
        If checkIpFormat("netmask", pnl_logger_netmask) AND checkIpFormat("gateway", pnl_logger_gateway) Then
          SetSetting("NETWORK_SETTINGS.NETMASK", pnl_logger_netmask)
          SetSetting("NETWORK_SETTINGS.GATEWAY", pnl_logger_gateway)

          If pnl_logger_dns2 <> "" Then
            If checkIpFormat("dns2 address", pnl_logger_dns2) Then
              SetSetting("NETWORK_SETTINGS.DNS2_ADDRESS", pnl_logger_dns2)
            EndIf
          Else
            SetSetting("NETWORK_SETTINGS.DNS2_ADDRESS", DNS2_ADDRESS)
          EndIf
        EndIf
      EndIf

      ' if no error, apply and restart the program to change the settings
      If pnl_network_settings_error = "" Then
        SetSetting("NETWORK_SETTINGS.CHANGE_NETWORK_SETTINGS", 1)
        SetSetting("NETWORK_SETTINGS.ApplyAndRestart", 1)
      EndIf

      pnl_cfg_change_network_settings = FALSE
    EndIf

  NextScan
EndProg
'################################################
